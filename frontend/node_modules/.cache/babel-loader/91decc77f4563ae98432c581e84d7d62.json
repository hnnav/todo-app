{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vahahen\\\\Documents\\\\todo-app\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vahahen\\\\Documents\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport itemService from \"../service/items\";\nfunction TodoList(_ref) {\n  var _this = this;\n  var user = _ref.user;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1]; // Get all items\n  useEffect(function () {\n    itemService.getAll().then(function (items) {\n      var usersItems = items.filter(function (item) {\n        return item.user.id === user.id;\n      });\n      setItems(usersItems);\n    });\n  }, [items]);\n\n  // Get users items\n\n  //    // DELETE by id\n  //    const handleDelete = async (id) => {\n  //        axios.delete(`https://todo-app-api-u0az.onrender.com/api/items/${id}`)\n  //        .then(response => {console.log(response)})\n  //        .catch((error) => console.log(error))\n  //    };\n  //\n  //    // UPDATE done / not done\n  //    const handleDone = async (id) => {\n  //\n  //        let oldStatus = items.filter(item => (item.id === id))[0].done\n  //        let newStatus = oldStatus ? false : true\n  //\n  //        axios.put(`https://todo-app-api-u0az.onrender.com/api/items/${id}`, {\n  //            done: newStatus\n  //        })\n  //        .then(response => {console.log(response)})\n  //        .catch((error) => console.log(error))\n  //    };\n  //\n  //    // Clear completed (Delete if done)\n  //    const handleClearCompleted = async (id) => {\n  //        let completedItems = items.filter(item => (item.done === true))\n  //        let itemIds = completedItems.map(item => item.id)\n  //        itemIds.map(id => handleDelete(id))\n  //    };\n  //\n  //    // Filter items (all / active / completed)\n  //    const [filter, setFilter] = useState('all');\n  //    let handleFilter = (e) => {\n  //        setFilter(e.target.id)\n  //    }\n  //    \n  //    // eslint-disable-next-line\n  //    const filteredItems = items.filter((item) => {\n  //        if (filter === 'all') {\n  //            return item;\n  //        } else if (filter === 'active') {\n  //            return item.done === false\n  //        } else if (filter === 'completed') {\n  //            return item.done === true\n  //        }\n  //    })\n  //    \n  //    // Number of items not done\n  //    let itemsLeft = items.filter(item => (item.done === false)).length\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, items && items.map(function (_ref2) {\n    var id = _ref2.id,\n      content = _ref2.content,\n      done = _ref2.done;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      className: \"item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"\".concat(done ? \"checked-circle\" : \"empty-circle\"),\n      src: \"/images/circle-outline.png\",\n      alt: \"circle\"\n      /* onClick={() => handleDone(id)} */,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"\".concat(done ? \"strike-through\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \" \", content, \" \"));\n  })));\n}\nexport default TodoList;","map":{"version":3,"names":["React","useState","useEffect","itemService","TodoList","user","items","setItems","getAll","then","usersItems","filter","item","id","map","content","done"],"sources":["C:/Users/vahahen/Documents/todo-app/frontend/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport itemService from \"../service/items\"\r\n\r\n\r\nfunction TodoList({ user }) {\r\n\r\n    const [items, setItems] = useState('')\r\n\r\n    // Get all items\r\n    useEffect(() => {\r\n        itemService.getAll().then((items) => {\r\n            const usersItems = items.filter(item => (item.user.id === user.id))\r\n            setItems(usersItems)\r\n            \r\n        })\r\n    }, [items])\r\n\r\n    // Get users items\r\n    \r\n//    // DELETE by id\r\n//    const handleDelete = async (id) => {\r\n//        axios.delete(`https://todo-app-api-u0az.onrender.com/api/items/${id}`)\r\n//        .then(response => {console.log(response)})\r\n//        .catch((error) => console.log(error))\r\n//    };\r\n//\r\n//    // UPDATE done / not done\r\n//    const handleDone = async (id) => {\r\n//\r\n//        let oldStatus = items.filter(item => (item.id === id))[0].done\r\n//        let newStatus = oldStatus ? false : true\r\n//\r\n//        axios.put(`https://todo-app-api-u0az.onrender.com/api/items/${id}`, {\r\n//            done: newStatus\r\n//        })\r\n//        .then(response => {console.log(response)})\r\n//        .catch((error) => console.log(error))\r\n//    };\r\n//\r\n//    // Clear completed (Delete if done)\r\n//    const handleClearCompleted = async (id) => {\r\n//        let completedItems = items.filter(item => (item.done === true))\r\n//        let itemIds = completedItems.map(item => item.id)\r\n//        itemIds.map(id => handleDelete(id))\r\n//    };\r\n//\r\n//    // Filter items (all / active / completed)\r\n//    const [filter, setFilter] = useState('all');\r\n//    let handleFilter = (e) => {\r\n//        setFilter(e.target.id)\r\n//    }\r\n//    \r\n//    // eslint-disable-next-line\r\n//    const filteredItems = items.filter((item) => {\r\n//        if (filter === 'all') {\r\n//            return item;\r\n//        } else if (filter === 'active') {\r\n//            return item.done === false\r\n//        } else if (filter === 'completed') {\r\n//            return item.done === true\r\n//        }\r\n//    })\r\n//    \r\n//    // Number of items not done\r\n//    let itemsLeft = items.filter(item => (item.done === false)).length\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"todo-list\">\r\n                    {items && items.map(({id, content, done}) => {\r\n                        return <div key={id} className=\"item\">\r\n                            <img \r\n                                className={`${done ? \"checked-circle\" : \"empty-circle\"}`} \r\n                                src=\"/images/circle-outline.png\" alt=\"circle\" \r\n                                /* onClick={() => handleDone(id)} */>\r\n                            </img>\r\n                            <p className={`${done ? \"strike-through\" : \"\"}`}> {content} </p>\r\n                            {/* <img className=\"cross\" src=\"\\images\\icon-cross.svg\" alt=\"cross\" onClick={() => handleDelete(id)}></img> */}\r\n                        </div>\r\n                    })}\r\n                {/* <div className=\"bottom-row\">\r\n                    <p>{itemsLeft} items left</p>\r\n                    <p className=\"clear-completed\" onClick={handleClearCompleted}>Clear completed</p>\r\n                </div> */}\r\n            </div>\r\n            {/* <div className=\"filter\">\r\n                <p onClick={handleFilter} id=\"all\"> All </p>\r\n                <p onClick={handleFilter} id=\"active\"> Active </p>\r\n                <p onClick={handleFilter} id=\"completed\"> Completed </p>\r\n            </div> */} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,kBAAkB;AAG1C,SAASC,QAAQ,OAAW;EAAA;EAAA,IAARC,IAAI,QAAJA,IAAI;EAAA,gBAEMJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BK,KAAK;IAAEC,QAAQ,kBAEtB;EACAL,SAAS,CAAC,YAAM;IACZC,WAAW,CAACK,MAAM,EAAE,CAACC,IAAI,CAAC,UAACH,KAAK,EAAK;MACjC,IAAMI,UAAU,GAAGJ,KAAK,CAACK,MAAM,CAAC,UAAAC,IAAI;QAAA,OAAKA,IAAI,CAACP,IAAI,CAACQ,EAAE,KAAKR,IAAI,CAACQ,EAAE;MAAA,CAAC,CAAC;MACnEN,QAAQ,CAACG,UAAU,CAAC;IAExB,CAAC,CAAC;EACN,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;;EAEX;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBA,KAAK,IAAIA,KAAK,CAACQ,GAAG,CAAC,iBAAyB;IAAA,IAAvBD,EAAE,SAAFA,EAAE;MAAEE,OAAO,SAAPA,OAAO;MAAEC,IAAI,SAAJA,IAAI;IACnC,oBAAO;MAAK,GAAG,EAAEH,EAAG;MAAC,SAAS,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACjC;MACI,SAAS,YAAKG,IAAI,GAAG,gBAAgB,GAAG,cAAc,CAAG;MACzD,GAAG,EAAC,4BAA4B;MAAC,GAAG,EAAC;MACrC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACE,eACN;MAAG,SAAS,YAAKA,IAAI,GAAG,gBAAgB,GAAG,EAAE,CAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,QAAGD,OAAO,MAAM,CAE9D;EACV,CAAC,CAAC,CAKJ,CAMJ;AAEd;AAEA,eAAeX,QAAQ"},"metadata":{},"sourceType":"module"}