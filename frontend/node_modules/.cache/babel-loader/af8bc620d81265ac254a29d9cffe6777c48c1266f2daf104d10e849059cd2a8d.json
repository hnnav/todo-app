{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vahahen\\\\Documents\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [items, setItems] = useState([]);\n\n  // Fetching from backend\n  const getAll = async () => {\n    try {\n      const res = await fetch('http://localhost:8080/api/items', {\n        method: 'GET',\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return await res.json();\n    } catch (err) {}\n  };\n  // Save fetched data to state\n  useEffect(() => {\n    getAll().then(res => {\n      setItems(res);\n    }).catch(error => console.log(error));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-items\",\n      children: items.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\\\\images\\\\gray-circle-outline-png.png\",\n            alt: \"cross\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item\",\n            children: item.content\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\\\\images\\\\icon-cross.svg\",\n            alt: \"cross\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [items.length, \" items left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Clear completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","items","setItems","getAll","res","fetch","method","headers","Accept","json","err","then","catch","error","console","log","map","item","content","id","length"],"sources":["C:/Users/vahahen/Documents/todo-app/frontend/src/components/TodoList.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nfunction TodoList() {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    // Fetching from backend\r\n    const getAll = async () => {\r\n      try {\r\n          const res = await fetch('http://localhost:8080/api/items', {\r\n              method: 'GET',\r\n              headers: {\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n              },\r\n          });\r\n          return await res.json();\r\n      } catch (err) {}\r\n    } \r\n    // Save fetched data to state\r\n    useEffect(() => {\r\n      getAll()\r\n      .then((res) => {\r\n        setItems(res);\r\n      })\r\n      .catch((error) => console.log(error))\r\n    }, [items]);\r\n  \r\n    return (\r\n        <div className=\"todo-list\">\r\n            <div className=\"all-items\">\r\n                {items.map((item) => {\r\n                    return <div>\r\n                        <img src=\"\\images\\gray-circle-outline-png.png\" alt=\"cross\"></img>\r\n                        <p className=\"item\" key={item.id}>{item.content}</p>\r\n                        <img src=\"\\images\\icon-cross.svg\" alt=\"cross\"></img>\r\n                    </div>\r\n                })}\r\n            </div>\r\n            <div className=\"bottom-row\">\r\n                <p>{items.length} items left</p>\r\n                <p>Clear completed</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA;AAEhD,SAASC,QAAQ,GAAG;EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMK,MAAM,GAAG,YAAY;IACzB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QACvDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACLC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,OAAO,MAAMJ,GAAG,CAACK,IAAI,EAAE;IAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;EACjB,CAAC;EACD;EACAX,SAAS,CAAC,MAAM;IACdI,MAAM,EAAE,CACPQ,IAAI,CAAEP,GAAG,IAAK;MACbF,QAAQ,CAACE,GAAG,CAAC;IACf,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEX,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,WAAW;MAAA,UACrBA,KAAK,CAACe,GAAG,CAAEC,IAAI,IAAK;QACjB,oBAAO;UAAA,wBACH;YAAK,GAAG,EAAC,uCAAqC;YAAC,GAAG,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAO,eACjE;YAAG,SAAS,EAAC,MAAM;YAAA,UAAgBA,IAAI,CAACC;UAAO,GAAtBD,IAAI,CAACE,EAAE;YAAA;YAAA;YAAA;UAAA,QAAoB,eACpD;YAAK,GAAG,EAAC,0BAAwB;YAAC,GAAG,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAClD;MACV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAC,YAAY;MAAA,wBACvB;QAAA,WAAIlB,KAAK,CAACmB,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA3CQpB,QAAQ;AAAA,KAARA,QAAQ;AA6CjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}