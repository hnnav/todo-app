{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport itemService from \"../service/items\";\nfunction TodoList(_ref) {\n  var user = _ref.user;\n  console.log(user);\n\n  /* const [items, setItems] = useState([])\r\n    // All items\r\n  useEffect(() => {\r\n      itemService.getAll().then((item) => {\r\n        setItems(item);\r\n      });\r\n  }, [items]);\r\n    // Users items\r\n  const usersItems = items.filter((item) => {\r\n      if (item.user && item.user.id === user.id) {\r\n          return item;\r\n      }\r\n  })\r\n    // DELETE by id\r\n  const handleDelete = async (id) => {\r\n      itemService.deleteItem(id)\r\n  }\r\n    // UPDATE done / not done\r\n  const handleDone = async (id) => {\r\n      let oldStatus = items.filter(item => (item.id === id))[0].done\r\n      const updatedItem = {\r\n          done: !oldStatus\r\n      }\r\n      itemService.updateDone(id, updatedItem)\r\n  }\r\n    // Clear completed (Delete if done)\r\n  const handleClearCompleted = async (id) => {\r\n      let completedItems = items.filter(item => (item.done === true))\r\n      let itemIds = completedItems.map(item => item.id)\r\n      itemIds.map(id => handleDelete(id))\r\n  };\r\n    // Filter items (all / active / completed)\r\n  const [filter, setFilter] = useState('all');\r\n  \r\n  let handleFilter = (e) => {\r\n      setFilter(e.target.id)\r\n  }\r\n  \r\n  const filteredItems = usersItems && usersItems.filter((item) => {\r\n      if (filter === 'all') {\r\n          return item;\r\n      } else if (filter === 'active') {\r\n          return item.done === false\r\n      } else if (filter === 'completed') {\r\n          return item.done === true\r\n      }\r\n  })\r\n    // Number of items not done\r\n  let itemsLeft = usersItems && usersItems.filter(item => (item.done === false)).length\r\n    return (\r\n      <div>\r\n          <div className=\"todo-list\">\r\n              {filteredItems && filteredItems.map(({id, content, done}) => {\r\n                  return <div key={id} className=\"item\">\r\n                      <img \r\n                          className={`${done ? \"checked-circle\" : \"empty-circle\"}`} \r\n                          src=\"/images/circle-outline.png\" alt=\"circle\" \r\n                          onClick={() => handleDone(id)}>\r\n                      </img>\r\n                      <p className={`${done ? \"strike-through\" : \"\"}`}> {content} </p>\r\n                      <img className=\"cross\" src=\"\\images\\icon-cross.svg\" alt=\"cross\" onClick={() => handleDelete(id)}></img>\r\n                  </div>\r\n              })}\r\n              <div className=\"bottom-row\">\r\n                  <p>{itemsLeft} items left</p>\r\n                  <p className=\"clear-completed\" onClick={handleClearCompleted}>Clear completed</p>\r\n              </div>\r\n          </div>\r\n          <div className=\"filter\">\r\n              <p onClick={handleFilter} id=\"all\"> All </p>\r\n              <p onClick={handleFilter} id=\"active\"> Active </p>\r\n              <p onClick={handleFilter} id=\"completed\"> Completed </p>\r\n          </div> \r\n      </div>\r\n  ) */\n}\n\nexport default TodoList;","map":{"version":3,"names":["React","useState","useEffect","itemService","TodoList","user","console","log"],"sources":["C:/Users/vahahen/Documents/todo-app/frontend/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport itemService from \"../service/items\"\r\n\r\n\r\nfunction TodoList({ user }) {\r\n\r\n    console.log(user);\r\n\r\n    /* const [items, setItems] = useState([])\r\n\r\n    // All items\r\n    useEffect(() => {\r\n        itemService.getAll().then((item) => {\r\n          setItems(item);\r\n        });\r\n    }, [items]);\r\n\r\n    // Users items\r\n    const usersItems = items.filter((item) => {\r\n        if (item.user && item.user.id === user.id) {\r\n            return item;\r\n        }\r\n    })\r\n\r\n    // DELETE by id\r\n    const handleDelete = async (id) => {\r\n        itemService.deleteItem(id)\r\n    }\r\n\r\n    // UPDATE done / not done\r\n    const handleDone = async (id) => {\r\n        let oldStatus = items.filter(item => (item.id === id))[0].done\r\n        const updatedItem = {\r\n            done: !oldStatus\r\n        }\r\n        itemService.updateDone(id, updatedItem)\r\n    }\r\n\r\n    // Clear completed (Delete if done)\r\n    const handleClearCompleted = async (id) => {\r\n        let completedItems = items.filter(item => (item.done === true))\r\n        let itemIds = completedItems.map(item => item.id)\r\n        itemIds.map(id => handleDelete(id))\r\n    };\r\n\r\n    // Filter items (all / active / completed)\r\n    const [filter, setFilter] = useState('all');\r\n    \r\n    let handleFilter = (e) => {\r\n        setFilter(e.target.id)\r\n    }\r\n    \r\n    const filteredItems = usersItems && usersItems.filter((item) => {\r\n        if (filter === 'all') {\r\n            return item;\r\n        } else if (filter === 'active') {\r\n            return item.done === false\r\n        } else if (filter === 'completed') {\r\n            return item.done === true\r\n        }\r\n    })\r\n\r\n    // Number of items not done\r\n    let itemsLeft = usersItems && usersItems.filter(item => (item.done === false)).length\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"todo-list\">\r\n                {filteredItems && filteredItems.map(({id, content, done}) => {\r\n                    return <div key={id} className=\"item\">\r\n                        <img \r\n                            className={`${done ? \"checked-circle\" : \"empty-circle\"}`} \r\n                            src=\"/images/circle-outline.png\" alt=\"circle\" \r\n                            onClick={() => handleDone(id)}>\r\n                        </img>\r\n                        <p className={`${done ? \"strike-through\" : \"\"}`}> {content} </p>\r\n                        <img className=\"cross\" src=\"\\images\\icon-cross.svg\" alt=\"cross\" onClick={() => handleDelete(id)}></img>\r\n                    </div>\r\n                })}\r\n                <div className=\"bottom-row\">\r\n                    <p>{itemsLeft} items left</p>\r\n                    <p className=\"clear-completed\" onClick={handleClearCompleted}>Clear completed</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"filter\">\r\n                <p onClick={handleFilter} id=\"all\"> All </p>\r\n                <p onClick={handleFilter} id=\"active\"> Active </p>\r\n                <p onClick={handleFilter} id=\"completed\"> Completed </p>\r\n            </div> \r\n        </div>\r\n    ) */\r\n}\r\n\r\nexport default TodoList"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,kBAAkB;AAG1C,SAASC,QAAQ,OAAW;EAAA,IAARC,IAAI,QAAJA,IAAI;EAEpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;;EAEjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;;AAEA,eAAeD,QAAQ"},"metadata":{},"sourceType":"module"}