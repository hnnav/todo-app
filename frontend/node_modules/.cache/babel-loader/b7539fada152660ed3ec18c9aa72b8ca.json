{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vahahen\\\\Documents\\\\todo-app\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vahahen\\\\Documents\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState } from 'react';\nfunction TodoList(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1]; //props.user.id is undefined\n  // Fetch user\n  // useEffect(() => {\n  //     axios.get(`http://localhost:8080/api/users/${props.user.id}`, \n  //     {headers: {Authorization: props.user.token}})\n  //     .then(res => setUser(res.data))\n  //     .catch((error) => console.log(error))\n  // }, [])\n  //    // DELETE by id\n  //    const handleDelete = async (id) => {\n  //        axios.delete(`https://todo-app-api-u0az.onrender.com/api/items/${id}`)\n  //        .then(response => {console.log(response)})\n  //        .catch((error) => console.log(error))\n  //    };\n  //\n  //    // UPDATE done / not done\n  //    const handleDone = async (id) => {\n  //\n  //        let oldStatus = items.filter(item => (item.id === id))[0].done\n  //        let newStatus = oldStatus ? false : true\n  //\n  //        axios.put(`https://todo-app-api-u0az.onrender.com/api/items/${id}`, {\n  //            done: newStatus\n  //        })\n  //        .then(response => {console.log(response)})\n  //        .catch((error) => console.log(error))\n  //    };\n  //\n  //    // Clear completed (Delete if done)\n  //    const handleClearCompleted = async (id) => {\n  //        let completedItems = items.filter(item => (item.done === true))\n  //        let itemIds = completedItems.map(item => item.id)\n  //        itemIds.map(id => handleDelete(id))\n  //    };\n  //\n  //    // Filter items (all / active / completed)\n  //    const [filter, setFilter] = useState('all');\n  //    let handleFilter = (e) => {\n  //        setFilter(e.target.id)\n  //    }\n  //    \n  //    // eslint-disable-next-line\n  //    const filteredItems = items.filter((item) => {\n  //        if (filter === 'all') {\n  //            return item;\n  //        } else if (filter === 'active') {\n  //            return item.done === false\n  //        } else if (filter === 'completed') {\n  //            return item.done === true\n  //        }\n  //    })\n  //    \n  //    // Number of items not done\n  //    let itemsLeft = items.filter(item => (item.done === false)).length\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, console.log(props.user));\n}\nexport default TodoList;","map":{"version":3,"names":["React","useState","TodoList","props","user","setUser","console","log"],"sources":["C:/Users/vahahen/Documents/todo-app/frontend/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction TodoList(props) {\r\n\r\n    const [user, setUser] = useState('')\r\n\r\n    //props.user.id is undefined\r\n\r\n    // Fetch user\r\n    // useEffect(() => {\r\n    //     axios.get(`http://localhost:8080/api/users/${props.user.id}`, \r\n    //     {headers: {Authorization: props.user.token}})\r\n    //     .then(res => setUser(res.data))\r\n    //     .catch((error) => console.log(error))\r\n    // }, [])\r\n    \r\n\r\n    \r\n//    // DELETE by id\r\n//    const handleDelete = async (id) => {\r\n//        axios.delete(`https://todo-app-api-u0az.onrender.com/api/items/${id}`)\r\n//        .then(response => {console.log(response)})\r\n//        .catch((error) => console.log(error))\r\n//    };\r\n//\r\n//    // UPDATE done / not done\r\n//    const handleDone = async (id) => {\r\n//\r\n//        let oldStatus = items.filter(item => (item.id === id))[0].done\r\n//        let newStatus = oldStatus ? false : true\r\n//\r\n//        axios.put(`https://todo-app-api-u0az.onrender.com/api/items/${id}`, {\r\n//            done: newStatus\r\n//        })\r\n//        .then(response => {console.log(response)})\r\n//        .catch((error) => console.log(error))\r\n//    };\r\n//\r\n//    // Clear completed (Delete if done)\r\n//    const handleClearCompleted = async (id) => {\r\n//        let completedItems = items.filter(item => (item.done === true))\r\n//        let itemIds = completedItems.map(item => item.id)\r\n//        itemIds.map(id => handleDelete(id))\r\n//    };\r\n//\r\n//    // Filter items (all / active / completed)\r\n//    const [filter, setFilter] = useState('all');\r\n//    let handleFilter = (e) => {\r\n//        setFilter(e.target.id)\r\n//    }\r\n//    \r\n//    // eslint-disable-next-line\r\n//    const filteredItems = items.filter((item) => {\r\n//        if (filter === 'all') {\r\n//            return item;\r\n//        } else if (filter === 'active') {\r\n//            return item.done === false\r\n//        } else if (filter === 'completed') {\r\n//            return item.done === true\r\n//        }\r\n//    })\r\n//    \r\n//    // Number of items not done\r\n//    let itemsLeft = items.filter(item => (item.done === false)).length\r\n\r\n    return (\r\n        <div>\r\n            {console.log(props.user)}\r\n            {/* <div className=\"todo-list\">\r\n                    {filteredItems.map(({id, content, done}) => {\r\n                        return <div key={id} className=\"item\">\r\n                            <img \r\n                                className={`${done ? \"checked-circle\" : \"empty-circle\"}`} \r\n                                src=\"/images/circle-outline.png\" alt=\"circle\" \r\n                                onClick={() => handleDone(id)}>\r\n                            </img>\r\n                            <p className={`${done ? \"strike-through\" : \"\"}`}> {content} </p>\r\n                            <img className=\"cross\" src=\"\\images\\icon-cross.svg\" alt=\"cross\" onClick={() => handleDelete(id)}></img>\r\n                        </div>\r\n                    })}\r\n                <div className=\"bottom-row\">\r\n                    <p>{itemsLeft} items left</p>\r\n                    <p className=\"clear-completed\" onClick={handleClearCompleted}>Clear completed</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"filter\">\r\n                <p onClick={handleFilter} id=\"all\"> All </p>\r\n                <p onClick={handleFilter} id=\"active\"> Active </p>\r\n                <p onClick={handleFilter} id=\"completed\"> Completed </p>\r\n            </div>  */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA,gBAEGF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BG,IAAI;IAAEC,OAAO,kBAEpB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAIJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEI,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACC,IAAI,CAAC,CAuBtB;AAEd;AAEA,eAAeF,QAAQ"},"metadata":{},"sourceType":"module"}